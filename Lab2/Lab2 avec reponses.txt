#####################
### LAB #2 - REPONSES
#####################

_______________________________________________________________________
1. Creation d'un cluster ONTAP Select Single Node (au choix CLI ou API)

Informations à utiliser
ONTAP cluster name					XXX
Admin account password				Netapp1!
Cluster management IP				192.168.0.103/24
Gateway								192.168.0.1
ONTAP image version					9.2
Cluster node name					XXX-1
Node management IP					192.168.0.113
Node host IP(s)						192.168.0.51 (DEMO\administrator   /   Netapp1!)
Node host location					RTP
Storage Pool						esx1data
vCenter								vc1.demo.netapp.com
DNS IP(s)							192.168.0.253
DNS search domain(s)				demo.netapp.com
NTP server IP(s)					192.168.0.1
Management network port group		ONTAP-external
Data network port group				ONTAP-external

ONTAP Deploy FQDN					ontapselect.demo.netapp.com
ONTAP Deploy IP						192.168.0.109

3 étapes:
- ajout de l'ESX dans la configuration Deploy
- configuration de cet ESX
- creation d'un cluster

=> pour se connecter à RHEL1: root/Netapp1!
=> pour se connecter à DEPLOY: amdin/Netapp1!

____________________
1.A Création via CLI (login sur Deploy)

host add --host-id 192.168.0.51 --username "DEMO\administrator"  --password "Netapp1!" --vcenter vc1.demo.netapp.com
host show-all (=> il doit être en 'authenticated')

host configure --host-id 192.168.0.51 --location RTP --storage-pool esx1data --management-network ONTAP-external --data-network ONTAP-external --eval
host show-all (=> il doit être en 'configured')

cluster create --name cluster3 --admin-password Netapp1! --cluster-mgmt-ip 192.168.0.103 --netmask 255.255.255.0 --gateway 192.168.0.1 --ontap-image-version 9.2 --node-names cluster3-1 --node-mgmt-ips 192.168.0.113  --node-hosts 192.168.0.51 --dns-ips 192.168.0.253 --dns-domains demo.netapp.com --ntp-servers 192.168.0.1
host show-all (=> Cluster Created = True)
cluster show-all

_____________________
1.B Création d'un API (login sur RHEL1) ==> Patience
=> connexion à RHEL1 : root/Netapp1!

/// HOST Registration
curl -ku admin:Netapp1! -X PUT --header 'Content-Type: application/json' --header 'Accept: application/json' -d @CURL-RegisterHost.json 'https://ontapselect.demo.netapp.com/api/v2/hosts/192.168.0.51'

/// HOST Configuration
curl -ku admin:Netapp1! -X PUT --header 'Content-Type: application/json' --header 'Accept: application/json' -d @CURL-ConfigureHost.json 'https://ontapselect.demo.netapp.com/api/v2/hosts/192.168.0.51/configuration'

/// HOST Listing
curl -ku admin:Netapp1! -X GET --header 'Accept: application/json' https://192.168.0.109/api/v2/hosts

/// CLUSTER Creation
curl -ku admin:Netapp1! -X POST --header 'Content-Type: application/json' --header 'Accept: application/json' -d @CURL-SingleNodeCreation.json https://192.168.0.109/api/v2/clusters

/// CLUSTER List
curl -ku admin:Netapp1! -X GET --header 'Accept: application/json' -d @CURL-ClustersList.json https://192.168.0.109/api/v2/clusters



____________________________________________
2. Configuration d'une SVM (au choix A ou B)
__________________________________________________________
2.A Création d'une SVM sur le nouveau cluster ONTAP Select (la création prend 30 minutes)

IP de dispo: 192.168.0.140
Protocole à activer: NFS
Gérer l'utilisateur vsadmin
______________________________________________
2.B Utilisation de la SVM svm1 sur le cluster1

via le GUI:
- Creation d'un mot de passe pour l'utlisateur vsadmin => Netapp1!
- "Unlock" de l'utilisateur vsadmin
- Lif à utiliser: 192.168.0.131

__________________________________________
3. Installation "Trident for Docker" 18.01

https://netapp-trident.readthedocs.io/en/stable-v18.01/
docker plugin install --alias netapp --grant-all-permissions --disable netapp/trident-plugin:latest

___________________________________________
4. Configuration "Trident for Docker" 18.01

le fichier config.json pour utiliser la svm1 existe déjà sur RHEL1
il est adaptable pour utiliser le cluster2 si besoin
Positionner un préfixe dans le fichier de configuration: lod

_______________________________________________________
5. Création d'un volume persistent & gestion du contenu

cd
git clone https://github.com/YvosOnTheHub/Hack-Aix.git

docker volume create -d ontapnas --name demo_www_data -o size=1g
docker volume ls
mount 192.168.0.131:/netappdvp_demo_www_data /mnt/demo_www_data
cp ~/Hack-Aix/Lab2/Apache/*  /mnt/demo_www_data/

________________________________________________________________
6. Création d'un clone de volume persistent & gestion du contenu

docker volume create -d ontapnas --name demo_www_data_clone -o from=demo_www_data
docker volume ls
ssh -l vsadmin 192.168.0.131 vol clone show
mkdir /mnt/demo_www_data_clone
mount 10.65.180.126:/lod_demo_www_data_clone /mnt/demo_www_data_clone

__________________________________
7. Création de 3 containers Apache

Container#1 pointe sur volume persistent#1
Container#2 pointe sur volume persistent#1
Container#3 pointe sur volume persistent#2 (clone du volume#1)

docker run -d --name demo_php1 -v demo_www_data:/var/www/html -p 8000:80 php:7.0-apache
docker run -d --name demo_php2 -v demo_www_data:/var/www/html -p 8001:80 php:7.0-apache
docker run -d --name demo_php3 -v demo_www_data_clone:/var/www/html -p 8002:80 php:5.5-apache

_____________________________________________________________________________
8. Connexion sur le navigateur vers les 3 containers et observer le résultat

____________________________________________________________________
9. Modification du contenu (parent & clone) & observation à nouveau



