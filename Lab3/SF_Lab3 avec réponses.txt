#####################
### LAB #3 REPONSES
#####################

________________________
1. Connection sur CentOS

_________________________________
2. Paramétrage de l'environnement

setenforce permissive
systemctl stop firewalld  && systemctl disable firewalld

cd
git clone https://github.com/YvosOnTheHub/Hack-Aix.git

____________________________
3. Installation Docker 17.12

Check supported version of docker: https://netapp-trident.readthedocs.io/en/stable-v18.01/support/requirements.html#requirements
yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo
yum list docker-ce --showduplicates | sort -r
yum install -y docker-ce-17.12.1.ce

systemctl start docker
cat > /etc/docker/daemon.json << EOF
    {
        "insecure-registries" : ["172.30.0.0/16"]
    }
EOF

systemctl enable docker && systemctl restart docker 

____________________________________________________________________
4. Finalisation de configuration du cluster Solidfire via powershell

docker run -it --rm netapp/solidfire-powershell:latest 
	powershell
	Connect-SFCluster 192.168.0.101 -Username admin -Password Netapp1! 
	Get-SFPendingNode | Add-SFNode 
	Get-SFDrive | Where-Object {$_.status -eq "available"} | Add-SFDrive
	Set-SFVolumeAccessGroup -VolumeAccessGroupID 1 -Name trident
		Y
	Disconnect-SFCluster 192.168.0.101
	exit
	exit
	
_______________________________
5. Installation OpenShift 3.7.1

cd
wget https://github.com/openshift/origin/releases/download/v3.7.1/openshift-origin-server-v3.7.1-ab0f056-linux-64bit.tar.gz
wget https://github.com/openshift/origin/releases/download/v3.9.0/openshift-origin-server-v3.9.0-191fece-linux-64bit.tar.gz
tar xzf openshift*v3.7.1*.tar.gz 
mv openshift-origin-server-v3.7.1-ab0f056-linux-64bit openshift-v3.7.1-install
mv openshift-v3.7.1-install/kube* /usr/local/bin/
mv openshift-v3.7.1-install/o* /usr/local/bin/    

https://docs.openshift.org/latest/getting_started/administrators.html
wget https://github.com/openshift/origin/archive/v3.9.0.tar.gz

_______________________________
6. Démarrage de OpenShift 3.7.1

oc cluster up --public-hostname="192.168.0.61" --host-data-dir=/root/oc.config --use-existing-config

______________________________________________
7. Installation "Trident for Kubernetes" 18.01

https://netapp-trident.readthedocs.io/en/stable-v18.01/

wget https://github.com/NetApp/trident/releases/download/v18.01.0/trident-installer-18.01.0.tar.gz
tar -xf trident-installer-18.01.0.tar.gz
cd trident-installer
mv tridentctl /usr/local/bin/
chmod +x /usr/local/bin/tridentctl  

_______________________________________________
8. Configuration "Trident for Kubernetes" 18.01

cp ~/Hack-Aix/Lab2/Setup/backend.json ~/trident-installer/setup/
oc login -u system:admin
cd ~/trident-installer
./install_trident.sh -n trident

kubectl get pods -n trident
=> attendre qu'un POD nommé "trident-123456789-XXXX" soit présent

// Vérifier la version de Trident
tridentctl -n trident version

// Trident utilse un espace de stockage (PV) sur le cluster solidfire
oc get pv | grep -e NAME -e trident

__________________________________________________
9. Configuration des Backends utilisés par Trident

on peut utiliser le même backed que sur l'étape 8 :)

tridentctl -n trident create backend -f ~/trident-installer/setup/backend.json
tridentctl -n trident get backend

______________________________________
10. Configuration de 2 "Storage Class" (IOPS = 500 & IOPS= 1500)

oc create -f ~/trident-installer/sc_small.yaml
oc create -f ~/trident-installer/sc_medium.yaml
oc get sc

____________________________________________
11. Test de création d'un PVC de test de 1Go

cf file test1G.yaml

oc login -u developer
oc create -f ~/test1G.yaml

oc login -u system:admin
oc describe pv myproject
____________________________________________
12. Test de création d'un POD de test de 1Go

cf file pod_test.yaml

oc login -u developer
oc create -f ~/pod_test.yaml 

y a t il un container Alpine?
docker ps | grep -e CONTAINER -e alpine

verification du montage à l'intérieur du container
oc exec -it pod-test-small -- mount

_______________________________
13. Création d'un pod Wordpress

cf répertoire Wordpress

oc create -f ~/wordpress/1-pvc-wordpress.yaml
oc create -f ~/wordpress/2-pvc-mysql.yaml
oc create -f ~/wordpress/3-svc-mysql.yaml
oc create -f ~/wordpress/4-svc-lb-wp.yaml
oc create -f ~/wordpress/5-pod-mysql.yaml
oc create -f ~/wordpress/6-pod-wordpress.yaml
