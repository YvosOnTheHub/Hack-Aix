#####################
### LAB #3 - REPONSES
#####################

_______________________________________________________________________
1. Creation d'un cluster ONTAP Select Single Node (au choix CLI ou API)

Informations à utiliser
ONTAP cluster name					XXX
Admin account password				Netapp1!
Cluster management IP				192.168.0.103/24
Gateway								192.168.0.1
ONTAP image version					9.2
Cluster node name					XXX-1
Node management IP					192.168.0.113
Node host IP(s)						192.168.0.51 (DEMO\administrator   /   Netapp1!)
Node host location					RTP
Storage Pool						esx1data
vCenter								vc1.demo.netapp.com
DNS IP(s)							192.168.0.253
DNS search domain(s)				demo.netapp.com
NTP server IP(s)					192.168.0.1
Management network port group		ONTAP-external
Data network port group				ONTAP-external

____________________
1.A Création via API (login sur Deploy)

host add --host-id 192.168.0.51 --username "DEMO\administrator"  --password "Netapp1!" --vcenter vc1.demo.netapp.com
host show-all (=> il doit être en 'authenticated')

host configure --host-id 192.168.0.51 --location RTP --storage-pool esx1data --management-network ONTAP-external --data-network ONTAP-external --eval
host show-all (=> il doit être en 'configured')

cluster create --name cluster3 --admin-password Netapp1! --cluster-mgmt-ip 192.168.0.103 --netmask 255.255.255.0 --gateway 192.168.0.1 --ontap-image-version 9.2 --node-names cluster3-1 --node-mgmt-ips 192.168.0.113  --node-hosts 192.168.0.51 --dns-ips 192.168.0.253 --dns-domains demo.netapp.com --ntp-servers 192.168.0.1
host show-all (=> Cluster Created = True)
cluster show-all

_____________________
1.B Création d'un CLI (login sur RHEL1)

/// HOST Registration
curl -ku admin:Netapp1! -X PUT --header 'Content-Type: application/json' --header 'Accept: application/json' -d @CURL-RegisterHost.json 'https://ontapselect.demo.netapp.com/api/v2/hosts/192.168.0.51'

/// HOST Configuration
curl -ku admin:Netapp1! -X PUT --header 'Content-Type: application/json' --header 'Accept: application/json' -d @CURL-ConfigureHost.json 'https://ontapselect.demo.netapp.com/api/v2/hosts/192.168.0.51/configuration'

/// HOST Listing
curl -ku admin:Netapp1! -X GET --header 'Accept: application/json' https://192.168.0.109/api/v2/hosts

/// CLUSTER Creation
curl -ku admin:Netapp1! -X POST --header 'Content-Type: application/json' --header 'Accept: application/json' -d @CURL-SingleNodeCreation.json https://192.168.0.109/api/v2/clusters

/// CLUSTER List
curl -ku admin:Netapp1! -X GET --header 'Accept: application/json' -d @CURL-ClustersList.json https://192.168.0.109/api/v2/clusters



______________________
1. Connection sur RHEL1

_________________________________
2. Paramétrage de l'environnement

setenforce permissive 
iptables -L INPUT --line 
iptables -D INPUT 7

____________________________
3. Installation Docker 17.12

Check supported version of docker: https://netapp-trident.readthedocs.io/en/stable-v18.01/support/requirements.html#requirements
yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo
yum list docker-ce --showduplicates | sort -r
yum install docker-ce-17.12.1.ce
systemctl start docker 

____________________________________________________________________
4. Finalisation de configuration du cluster Solidfire via powershell

docker run -it --rm netapp/solidfire-powershell:latest 
	powershell
	Connect-SFCluster 192.168.0.101 -Username admin -Password Netapp1! 
	Get-SFPendingNode | Add-SFNode 
	Get-SFDrive | Where-Object {$_.status -eq "available"} | Add-SFDrive 
	Disconnect-SFCluster 192.168.0.101
	exit
	exit
	
__________________________________________
5. Installation "Trident for Docker" 18.01

https://netapp-trident.readthedocs.io/en/stable-v18.01/

___________________________________________
6. Configuration "Trident for Docker" 18.01

____________________________________________________________________
7. Création d'un volume persistent avec une politique de QoS définie

__________________________________________________________________
8. Demarrage d'un container ALPINE & utilisation d'un shell simple

exemple avec un volume nommé "vol1"
docker run -it --rm -v vol1:/vol1 alpine ash 

_____________________________________________________________________________________
9. Génération d'IO au sein du container Alpine et visionnage sur le cluster Solidfire

exemple de commande pour générér des IO: dd



